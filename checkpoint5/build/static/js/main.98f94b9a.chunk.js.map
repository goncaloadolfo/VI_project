{"version":3,"sources":["components/visualizations/d3/RadarChart.js","components/visualizations/d3/ScatterPlot.js","components/visualizations/d3/AreaChart.js","components/visualizations/d3/ForceLayout.js","components/visualizations/d3/WordCloud.js","components/visualizations/d3/BarChart.js","components/Tracks.jsx","App.jsx","components/visualizations/SpiderChart.jsx","components/visualizations/ScatterPlot.jsx","components/visualizations/AreaChart.jsx","components/visualizations/ForceLayout.jsx","components/visualizations/WordCloud.jsx","components/visualizations/BarChart.jsx","components/Visualizations.jsx","index.js"],"names":["d3","require","max","Math","sin","cos","HALF_PI","PI","module","exports","parentSelector","data","options","cfg","w","h","margin","top","right","bottom","left","levels","maxValue","labelFactor","wrapWidth","opacityArea","dotRadius","opacityCircles","strokeWidth","roundStrokes","color","scaleOrdinal","schemeCategory10","format","unit","legend","onLabelClick","d","tooltipHtml","i","axes","reduce","acc","curr","idx","axis","value","length","console","log","j","name","allAxis","map","total","radius","min","Format","angleSlice","rScale","scaleLinear","range","domain","parent","select","remove","svg","append","attr","g","filter","feMerge","axisGrid","selectAll","reverse","enter","style","text","on","radarLine","radialLine","curve","curveLinearClosed","angle","curveCardinalClosed","blobWrapper","replace","toLowerCase","id","tooltip","legendZone","names","el","title","translateX","translateY","transition","duration","html","mouse","this","xDomain","xAttribute","yDomain","yAttribute","onDotClick","height","width","formatter","x","call","axisBottom","tickFormat","y","axisLeft","colorAttribute","lineWidth","areaOpacity","numberOfValues","schemeSet2","timeFormat","date","values","entry","timeParse","scaleTime","ticks","tickSizeOuter","e","area","y0","y1","line","forEach","fociAttributes","fociDomains","collideForceStrength","foci","forceRange","scaleMap","node","simulation","forceSimulation","force","forceCollide","forceRadial","nodes","cloud","wordsPadding","textAttribute","valueAttribute","maxSize","sizeScale","onWordClick","layout","size","words","padding","rotate","random","fontSize","start","idAttribute","onBarClick","scaleBand","bandwidth","monthAbbreviations","Tracks","props","updateHeights","setState","tableHeight","window","innerHeight","topJumbotronRef","current","clientHeight","bottomJumbotronRef","handleChangeDateOnClick","showDateForm","handleFiltersOnClick","showFiltersForm","handleDateFormOnCancel","handleFiltersFormOnCancel","handleDateFormOnSave","dateArray","onDateChange","handleFiltersFormOnSave","filters","onFiltersChange","handleOnSearchChange","ev","onSearchChange","target","state","changedDates","React","createRef","addEventListener","removeEventListener","nextProps","jumbotronStyle","marginBottom","Jumbotron","ref","Button","variant","onClick","Form","Control","type","placeholder","search","onChange","overflow","Table","responsive","hover","tracks","t","cursor","selectedTracks","Id","backgroundColor","key","Position","onTrackClick","Explicit","Artist","Streams","className","numExplicit","maxDate","show","onCancel","onSave","dateSplit","split","toUpperCase","join","toLocaleLowerCase","normalize","includes","Component","DateForm","handleOnCheckChange","event","check","handleOnChange","handleOnSave","day","push","fromDay","toDay","Modal","onHide","centered","Header","closeButton","Title","Body","inline","Check","Input","checked","Label","disabled","Footer","FiltersForm","obj","property","hasOwnProperty","element","scrollable","step","f","as","RadarChart","SpiderChart","means","spiderChartDivRef","addD3","colors","Acousticness","Danceability","Energy","Instrumentalness","Liveness","Speechiness","Valence","track","offsetWidth","d3ScatterPlot","ScatterPlot","handleOnFeatureChange","onFeatureChange","scatterPlotDivRef","getFeatureMin","getFeatureMax","feature","marginTop","float","opt","d3AreaChart","AreaChart","handleOnNDaysChange","nDays","handleOnAccumulatedChange","accumulated","minDate","areaChartDivRef","colorDomain","colorRange","Date","maxMinusNDays","setDate","getDate","valueOf","getTime","allEntries","JSON","parse","stringify","mapIdx","dCopy","label","d3ForceLayout","N_MIN_FEATURES","N_MAX_FEATURES","ForceLayout","handleOnClick","showForm","handleOnCancel","features","forceLayoutDivRef","textAlign","FeaturesForm","len","multiple","d3WordCloud","WordCloud","artistsStreams","wordCloudDivRef","streams","streamsDiff","v","MAX_FONT_SIZE","accStreams","artist","sort","a1","a2","d3BarChart","BarChart","handleOnNTracksChange","nTracks","barChartDivRef","getTopNTracks","getNumberOfDays","dates","res","entries","prevDate","counter","n","allTracksMap","t1","t2","slice","Visualizations","updateRowHeight","rowHeight","handleOnFeaturesChange","scatterPlotFeature","Container","fluid","Row","Col","originalDataset","MAX_TRACKS_SELECTED","defaultColors","schemeDark2","App","handleOnDateChange","days","filterTracks","getTracksByDates","countExplicitTracks","selTrack","defaultTracks","getDefaultTracks","nSelectedTracks","handleOnFiltersChange","handleOnTrackClick","undefined","pop","alert","dataset","fromDate","toDate","tracksMap","xs","md","lg","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98f94b9a.chunk.js","sourcesContent":["const d3 = require('d3')\r\n\r\nconst max = Math.max\r\nconst sin = Math.sin\r\nconst cos = Math.cos\r\nconst HALF_PI = Math.PI / 2\r\n\r\nconst RadarChart = function (parentSelector, data, options) {\r\n    const wrap = (text, width) => {\r\n        text.each(function () {\r\n            var text = d3.select(this),\r\n                words = text.text().split(/\\s+/).reverse(),\r\n                word,\r\n                line = [],\r\n                lineNumber = 0,\r\n                lineHeight = 1.4, // ems\r\n                y = text.attr('y'),\r\n                x = text.attr('x'),\r\n                dy = parseFloat(text.attr('dy')),\r\n                tspan = text.text(null).append('tspan').attr('x', x).attr('y', y).attr('dy', dy + 'em')\r\n\r\n            while (word = words.pop()) {\r\n                line.push(word)\r\n                tspan.text(line.join(' '))\r\n                if (tspan.node().getComputedTextLength() > width) {\r\n                    line.pop()\r\n                    tspan.text(line.join(' '))\r\n                    line = [word]\r\n                    tspan = text.append('tspan').attr('x', x).attr('y', y).attr('dy', ++lineNumber * lineHeight + dy + 'em').text(word)\r\n                }\r\n            }\r\n        })\r\n    }//wrap\r\n\r\n    const cfg = {\r\n        w: 600,\t\t\t\t                                  //Width of the circle\r\n        h: 600,\t\t\t\t                                  //Height of the circle\r\n        margin: { top: 20, right: 20, bottom: 20, left: 20 }, //The margins of the SVG\r\n        levels: 3,\t\t\t\t                              //How many levels or inner circles should there be drawn\r\n        maxValue: 0, \t\t\t                              //What is the value that the biggest circle will represent\r\n        labelFactor: 1.25, \t                                  //How much farther than the radius of the outer circle should the labels be placed\r\n        wrapWidth: 60, \t\t                                  //The number of pixels after which a label needs to be given a new line\r\n        opacityArea: 0.35, \t                                  //The opacity of the area of the blob\r\n        dotRadius: 4, \t\t\t                              //The size of the colored circles of each blog\r\n        opacityCircles: 0.1, \t                              //The opacity of the circles of each blob\r\n        strokeWidth: 2, \t\t                              //The width of the stroke around each blob\r\n        roundStrokes: false,\t                              //If true the area and stroke will follow a round path (cardinal-closed)\r\n        color: d3.scaleOrdinal(d3.schemeCategory10),\t      //Color function,\r\n        format: '.2%',\r\n        unit: '',\r\n        legend: false,\r\n        onLabelClick: d => { },\r\n        tooltipHtml: i => data[i].axes.reduce((acc, curr, idx) => {\r\n            if (idx === 0) return acc\r\n            acc += `<br />${curr.axis}: ${curr.value}`\r\n            if (idx !== data.length - 1) acc += ''\r\n            console.log(acc)\r\n            return acc\r\n        }, `${data[i].axes[0].axis}: ${data[i].axes[0].value}`)\r\n    }\r\n\r\n    //Put all of the options into a variable called cfg\r\n    if ('undefined' !== typeof options) {\r\n        for (var i in options) {\r\n            if ('undefined' !== typeof options[i]) { cfg[i] = options[i] }\r\n        }\r\n    }\r\n\r\n    //If the supplied maxValue is smaller than the actual one, replace by the max in the data\r\n    // var maxValue = max(cfg.maxValue, d3.max(data, function(i){return d3.max(i.map(function(o){return o.value}))}))\r\n    let maxValue = 0\r\n    for (let j = 0; j < data.length; j++) {\r\n        for (let i = 0; i < data[j].axes.length; i++) {\r\n            data[j].axes[i]['id'] = data[j].name\r\n            if (data[j].axes[i]['value'] > maxValue) {\r\n                maxValue = data[j].axes[i]['value']\r\n            }\r\n        }\r\n    }\r\n    maxValue = max(cfg.maxValue, maxValue)\r\n\r\n    const allAxis = data[0].axes.map((i, j) => i.axis),\t//Names of each axis\r\n        total = allAxis.length,\t\t\t\t\t        //The number of different axes\r\n        radius = Math.min(cfg.w / 2, cfg.h / 2), \t    //Radius of the outermost circle\r\n        Format = d3.format(cfg.format),\t\t\t \t    //Formatting\r\n        angleSlice = Math.PI * 2 / total\t\t        //The width in radians of each 'slice'\r\n\r\n    //Scale for the radius\r\n    const rScale = d3.scaleLinear()\r\n        .range([0, radius])\r\n        .domain([0, maxValue])\r\n\r\n    /////////////////////////////////////////////////////////\r\n    //////////// Create the container SVG and g /////////////\r\n    /////////////////////////////////////////////////////////\r\n    const parent = d3.select(parentSelector)\r\n\r\n    //Remove whatever chart with the same id/class was present before\r\n    parent.select('svg').remove()\r\n\r\n    //Initiate the radar chart SVG\r\n    let svg = parent.append('svg')\r\n        .attr('width', cfg.w + cfg.margin.left + cfg.margin.right)\r\n        .attr('height', cfg.h + cfg.margin.top + cfg.margin.bottom)\r\n        .attr('class', 'radar')\r\n\r\n    //Append a g element\r\n    let g = svg.append('g')\r\n        .attr('transform', `translate(${(cfg.w / 3)}, ${(cfg.h / 2 + cfg.margin.top)})`)\r\n\r\n    /////////////////////////////////////////////////////////\r\n    ////////// Glow filter for some extra pizzazz ///////////\r\n    /////////////////////////////////////////////////////////\r\n\r\n    //Filter for the outside glow\r\n    let filter = g.append('defs').append('filter').attr('id', 'glow'),\r\n        feGaussianBlur = filter.append('feGaussianBlur').attr('stdDeviation', '2.5').attr('result', 'coloredBlur'),\r\n        feMerge = filter.append('feMerge'),\r\n        feMergeNode_1 = feMerge.append('feMergeNode').attr('in', 'coloredBlur'),\r\n        feMergeNode_2 = feMerge.append('feMergeNode').attr('in', 'SourceGraphic')\r\n\r\n    /////////////////////////////////////////////////////////\r\n    /////////////// Draw the Circular grid //////////////////\r\n    /////////////////////////////////////////////////////////\r\n\r\n    //Wrapper for the grid & axes\r\n    let axisGrid = g.append('g').attr('class', 'axisWrapper')\r\n\r\n    //Draw the background circles\r\n    axisGrid.selectAll('.levels')\r\n        .data(d3.range(1, (cfg.levels + 1)).reverse())\r\n        .enter()\r\n        .append('circle')\r\n        .attr('class', 'gridCircle')\r\n        .attr('r', d => radius / cfg.levels * d)\r\n        .style('fill', '#CDCDCD')\r\n        .style('stroke', '#CDCDCD')\r\n        .style('fill-opacity', cfg.opacityCircles)\r\n    // .style('filter', 'url(#glow)')\r\n\r\n    //Text indicating at what % each level is\r\n    axisGrid.selectAll('.axisLabel')\r\n        .data(d3.range(1, (cfg.levels + 1)).reverse())\r\n        .enter().append('text')\r\n        .attr('class', 'axisLabel')\r\n        .attr('x', 4)\r\n        .attr('y', d => -d * radius / cfg.levels)\r\n        .attr('dy', '0.4em')\r\n        .style('font-size', '10px')\r\n        .attr('fill', '#fff')\r\n        .text(d => Format(maxValue * d / cfg.levels) + cfg.unit)\r\n\r\n    /////////////////////////////////////////////////////////\r\n    //////////////////// Draw the axes //////////////////////\r\n    /////////////////////////////////////////////////////////\r\n\r\n    //Create the straight lines radiating outward from the center\r\n    var axis = axisGrid.selectAll('.axis')\r\n        .data(allAxis)\r\n        .enter()\r\n        .append('g')\r\n        .attr('class', 'axis')\r\n    //Append the lines\r\n    axis.append('line')\r\n        .attr('x1', 0)\r\n        .attr('y1', 0)\r\n        .attr('x2', (d, i) => rScale(maxValue * 1.1) * cos(angleSlice * i - HALF_PI))\r\n        .attr('y2', (d, i) => rScale(maxValue * 1.1) * sin(angleSlice * i - HALF_PI))\r\n        .attr('class', 'line')\r\n        .style('stroke', '#ddd')\r\n        .style('stroke-width', '1px')\r\n\r\n    //Append the labels at each axis\r\n    axis.append('text')\r\n        .attr('class', 'legend')\r\n        .style('font-size', '11px')\r\n        .style('fill', 'white')\r\n        .style('cursor', 'pointer')\r\n        .attr('text-anchor', 'middle')\r\n        .attr('dy', '0.35em')\r\n        .attr('x', (d, i) => rScale(maxValue * cfg.labelFactor) * cos(angleSlice * i - HALF_PI))\r\n        .attr('y', (d, i) => rScale(maxValue * cfg.labelFactor) * sin(angleSlice * i - HALF_PI))\r\n        .text(d => d)\r\n        .on('click', d => cfg.onLabelClick(d))\r\n    // .call(wrap, cfg.wrapWidth)\r\n\r\n    /////////////////////////////////////////////////////////\r\n    ///////////// Draw the radar chart blobs ////////////////\r\n    /////////////////////////////////////////////////////////\r\n\r\n    //The radial line function\r\n    const radarLine = d3.radialLine()\r\n        .curve(d3.curveLinearClosed)\r\n        .radius(d => rScale(d.value))\r\n        .angle((d, i) => i * angleSlice)\r\n\r\n    if (cfg.roundStrokes) {\r\n        radarLine.curve(d3.curveCardinalClosed)\r\n    }\r\n\r\n    //Create a wrapper for the blobs\r\n    const blobWrapper = g.selectAll('.radarWrapper')\r\n        .data(data)\r\n        .enter().append('g')\r\n        .attr('class', 'radarWrapper')\r\n\r\n    //Append the backgrounds\r\n    blobWrapper\r\n        .append('path')\r\n        .attr('class', 'radarArea')\r\n        .attr('d', d => radarLine(d.axes))\r\n        .style('fill', (d, i) => cfg.color(i))\r\n        .style('fill-opacity', cfg.opacityArea)\r\n\r\n    //Create the outlines\r\n    blobWrapper.append('path')\r\n        .attr('class', d => `radarStroke ${d.name.replace(/\\s+/g, '-').toLowerCase()}`)\r\n        .attr('d', function (d, i) { return radarLine(d.axes) })\r\n        .style('stroke-width', cfg.strokeWidth + 'px')\r\n        .style('stroke', (d, i) => cfg.color(i))\r\n        .style('fill', 'none')\r\n    // .style('filter', 'url(#glow)')\r\n\r\n    //Append the circles\r\n    blobWrapper.selectAll('.radarCircle')\r\n        .data(d => d.axes)\r\n        .enter()\r\n        .append('circle')\r\n        .attr('class', d => `radarCircle ${d.id.replace(/\\s+/g, '-').toLowerCase()}`)\r\n        .attr('r', cfg.dotRadius)\r\n        .attr('cx', (d, i) => rScale(d.value) * cos(angleSlice * i - HALF_PI))\r\n        .attr('cy', (d, i) => rScale(d.value) * sin(angleSlice * i - HALF_PI))\r\n        .style('fill', (d) => cfg.color(d.id))\r\n        .style('fill-opacity', 0.8)\r\n\r\n    /////////////////////////////////////////////////////////\r\n    //////// Append invisible circles for tooltip ///////////\r\n    /////////////////////////////////////////////////////////\r\n\r\n    //Wrapper for the invisible circles on top\r\n    const blobCircleWrapper = g.selectAll('.radarCircleWrapper')\r\n        .data(data)\r\n        .enter().append('g')\r\n        .attr('class', 'radarCircleWrapper')\r\n\r\n    //Append a set of invisible circles on top for the mouseover pop-up\r\n    blobCircleWrapper.selectAll('.radarInvisibleCircle')\r\n        .data(d => d.axes)\r\n        .enter().append('circle')\r\n        .attr('class', 'radarInvisibleCircle')\r\n        .attr('r', cfg.dotRadius * 1.5)\r\n        .attr('cx', (d, i) => rScale(d.value) * cos(angleSlice * i - HALF_PI))\r\n        .attr('cy', (d, i) => rScale(d.value) * sin(angleSlice * i - HALF_PI))\r\n        .style('fill', 'none')\r\n        .style('pointer-events', 'all')\r\n        // .on('mouseover', function (d, i) {\r\n        //     tooltip\r\n        //         .attr('x', this.cx.baseVal.value - 10)\r\n        //         .attr('y', this.cy.baseVal.value - 10)\r\n        //         .transition()\r\n        //         .style('display', 'block')\r\n        //         .text(Format(d.value) + cfg.unit)\r\n        // })\r\n        // .on('mouseout', function () {\r\n        //     tooltip.transition()\r\n        //         .style('display', 'none').text('')\r\n        // })\r\n\r\n    let tooltip = d3.select(parentSelector)\r\n        .append('div')\r\n        .style('opacity', 0)\r\n        .attr('class', 'tooltip')\r\n        .style('background-color', 'white')\r\n        .style('color', 'black')\r\n        .style('border', 'solid')\r\n        .style('border-width', '1px')\r\n        .style('border-radius', '5px')\r\n        .style('padding', '2px')\r\n\r\n    if (cfg.legend !== false && typeof cfg.legend === 'object') {\r\n        let legendZone = svg.append('g')\r\n        let names = data.map(el => el.name)\r\n        if (cfg.legend.title) {\r\n            let title = legendZone.append('text')\r\n                .attr('class', 'title')\r\n                .attr('transform', `translate(${cfg.legend.translateX},${cfg.legend.translateY})`)\r\n                .attr('x', cfg.w - 70)\r\n                .attr('y', 10)\r\n                .attr('font-size', '12px')\r\n                .attr('fill', 'white')\r\n                .text(cfg.legend.title)\r\n        }\r\n        let legend = legendZone.append('g')\r\n            .attr('class', 'legend')\r\n            .attr('height', 100)\r\n            .attr('width', 200)\r\n            .attr('transform', `translate(${cfg.legend.translateX},${cfg.legend.translateY + 20})`)\r\n        // Create rectangles markers\r\n        legend.selectAll('rect')\r\n            .data(names)\r\n            .enter()\r\n            .append('rect')\r\n            .attr('x', cfg.w - 65)\r\n            .attr('y', (d, i) => i * 20)\r\n            .attr('width', 10)\r\n            .attr('height', 10)\r\n            .style('fill', (d, i) => cfg.color(i))\r\n        // Create labels\r\n        legend.selectAll('text')\r\n            .data(names)\r\n            .enter()\r\n            .append('text')\r\n            .attr('x', cfg.w - 52)\r\n            .attr('y', (d, i) => i * 20 + 9)\r\n            .attr('font-size', '11px')\r\n            .attr('fill', 'white')\r\n            .style('cursor', 'default')\r\n            .text(d => d)\r\n            .on('mouseover', function (d, i) {\r\n                //Dim all blobs\r\n                parent.selectAll('.radarCircle')\r\n                    .transition().duration(200)\r\n                    .style('fill-opacity', 0.1)\r\n                parent.selectAll('.radarStroke')\r\n                    .transition().duration(200)\r\n                    .style('stroke-opacity', 0.1)\r\n                //Bring back the hovered over blob\r\n                d3.selectAll(`.radarCircle.${d.replace(/\\s+/g, '-').toLowerCase()}`)\r\n                    .transition().duration(200)\r\n                    .style('fill-opacity', 0.8)\r\n                d3.select(`.radarStroke.${d.replace(/\\s+/g, '-').toLowerCase()}`)\r\n                    .transition().duration(200)\r\n                    .style('stroke-opacity', 1)\r\n                tooltip.style('opacity', 1)\r\n            })\r\n            .on('mousemove', function (d, i) {\r\n                let html = cfg.tooltipHtml(i)\r\n                console.log(html)\r\n                tooltip\r\n                    .html(html)\r\n                    .style('left', `${d3.mouse(this)[0] - 60}px`)\r\n                    .style('top', `${d3.mouse(this)[1]}px`)\r\n            })\r\n            .on('mouseout', () => {\r\n                //Bring back all blobs\r\n                parent.selectAll('.radarCircle')\r\n                    .transition().duration(200)\r\n                    .style('fill-opacity', .8)\r\n                parent.selectAll('.radarStroke')\r\n                    .transition().duration(200)\r\n                    .style('stroke-opacity', 1)\r\n                tooltip\r\n                    // .transition()\r\n                    // .duration(200)\r\n                    .style('opacity', 0)\r\n                    .style('left', '0px')\r\n                    .style('top', '0px')\r\n                    .style('display', 'none')\r\n            })\r\n    }\r\n    return svg\r\n}\r\n\r\nmodule.exports = RadarChart","const d3 = require('d3')\r\n\r\nconst ScatterPlot = function (parentSelector, data, options) {\r\n    const cfg = {\r\n        w: 600,\t\t\t\t                                  // Width of the circle\r\n        h: 600,\t\t\t\t                                  // Height of the circle\r\n        margin: { top: 10, right: 30, bottom: 30, left: 60 }, // The margins of the SVG\r\n        xDomain: [0, 100],\r\n        xAttribute: '',\r\n        yDomain: [0, 100],\r\n        yAttribute: '',\r\n        dotRadius: d => 1.5,\r\n        color: d3.scaleOrdinal().range(['white']),\t          // Color function\r\n        onDotClick: d => { },\r\n        tooltipHtml: d => `${cfg.xAttribute}: ${d[cfg.xAttribute]}<br />${cfg.yAttribute}: ${d[cfg.yAttribute]}`\r\n    }\r\n\r\n    // Put all of the options into a variable called cfg\r\n    if ('undefined' !== typeof options) {\r\n        for (var i in options) {\r\n            if ('undefined' !== typeof options[i]) { cfg[i] = options[i] }\r\n        }\r\n    }\r\n\r\n    const parent = d3.select(parentSelector)\r\n\r\n    //Remove whatever chart with the same id/class was present before\r\n    parent.select('svg').remove()\r\n\r\n    let svg = parent\r\n        .append('svg')\r\n        .attr('width', cfg.w)\r\n        .attr('height', cfg.h)\r\n        .append('g')\r\n        .attr('transform', `translate(${cfg.margin.left}, ${cfg.margin.top})`)\r\n\r\n    let height = cfg.h - cfg.margin.top - cfg.margin.bottom\r\n    let width = cfg.w - cfg.margin.left - cfg.margin.right\r\n\r\n    let formatter = d => {\r\n        if (d / 1000000 >= 1)\r\n            return `${d / 1000000}M`\r\n        if (d / 1000 >= 1)\r\n            return `${d / 1000}k`\r\n        return d\r\n    }\r\n\r\n    // Add X axis\r\n    let x = d3.scaleLinear()\r\n        .domain(cfg.xDomain)\r\n        .range([0, width])\r\n\r\n    svg.append('g')\r\n        .attr('transform', `translate(0, ${height})`)\r\n        .call(\r\n            d3.axisBottom(x)\r\n                .tickFormat(formatter)\r\n        )\r\n\r\n    // Add Y axis\r\n    let y = d3.scaleLinear()\r\n        .domain(cfg.yDomain)\r\n        .range([height, 0])\r\n\r\n    svg.append('g')\r\n        .call(\r\n            d3.axisLeft(y)\r\n                .tickFormat(formatter)\r\n        )\r\n        .append('text')\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('y', -45)\r\n        .attr('dy', '.71em')\r\n        .attr('fill', 'white')\r\n        .text(cfg.yAttribute)\r\n\r\n    // Add tooltip div\r\n    let tooltip = d3.select(parentSelector)\r\n        .append('div')\r\n        .style('opacity', 0)\r\n        .attr('class', 'tooltip')\r\n        .style('background-color', 'white')\r\n        .style('color', 'black')\r\n        .style('border', 'solid')\r\n        .style('border-width', '1px')\r\n        .style('border-radius', '5px')\r\n        .style('padding', '2px')\r\n\r\n    // Add dots\r\n    svg.append('g')\r\n        .selectAll('dot')\r\n        .data(data)\r\n        .enter()\r\n        .append('circle')\r\n        .attr('cx', d => x(d[cfg.xAttribute]))\r\n        .attr('cy', d => y(d[cfg.yAttribute]))\r\n        .attr('r', d => cfg.dotRadius(d))\r\n        .style('fill', d => cfg.color(d))\r\n        .on('mouseover', () => tooltip.style('opacity', 1))\r\n        .on('mousemove', function (d) {\r\n            tooltip\r\n                .html(cfg.tooltipHtml(d))\r\n                .style('left', `${d3.mouse(this)[0] + 90}px`)\r\n                .style('top', `${d3.mouse(this)[1]}px`)\r\n        })\r\n        .on('mouseleave', () => tooltip\r\n            // .transition()\r\n            // .duration(200)\r\n            .style('opacity', 0)\r\n            .style('left', '0px')\r\n            .style('top', '0px')\r\n            .style('display', 'none')\r\n        )\r\n        .on('click', d => {\r\n            tooltip\r\n                .style('opacity', 0)\r\n                .style('left', '0px')\r\n                .style('top', '0px')\r\n            cfg.onDotClick(d)\r\n        })\r\n}\r\n\r\nmodule.exports = ScatterPlot","const d3 = require('d3')\r\n\r\nconst AreaChart = function (parentSelector, data, options) {\r\n    const cfg = {\r\n        w: 600,\t\t\t\t                                  // Width of the circle\r\n        h: 600,\t\t\t\t                                  // Height of the circle\r\n        margin: { top: 10, right: 30, bottom: 30, left: 60 }, // The margins of the SVG\r\n        xAttribute: '',\r\n        yAttribute: '',\r\n        colorAttribute: '',\r\n        dotRadius: 3,\r\n        lineWidth: 4,\r\n        areaOpacity: .3,\r\n        numberOfValues: 5,\r\n        color: d3.scaleOrdinal(d3.schemeSet2),\t                          // Color function\r\n        tooltipHtml: d => `${cfg.xAttribute}: ${d3.timeFormat('%d %B')(d.date)}<br />${cfg.yAttribute}: ${d.value}`\r\n    }\r\n\r\n    // Put all of the options into a variable called cfg\r\n    if ('undefined' !== typeof options) {\r\n        for (var i in options) {\r\n            if ('undefined' !== typeof options[i]) { cfg[i] = options[i] }\r\n        }\r\n    }\r\n\r\n    const parent = d3.select(parentSelector)\r\n\r\n    //Remove whatever chart with the same id/class was present before\r\n    parent.select('svg').remove()\r\n\r\n    let svg = parent\r\n        .append('svg')\r\n        .attr('width', cfg.w)\r\n        .attr('height', cfg.h)\r\n        .append('g')\r\n        .attr('transform', `translate(${cfg.margin.left}, ${cfg.margin.top})`)\r\n\r\n    let height = cfg.h - cfg.margin.top - cfg.margin.bottom\r\n    let width = cfg.w - cfg.margin.left - cfg.margin.right\r\n\r\n    data = data.map(d => {\r\n        if (!d[0]) return {\r\n            id: 0,\r\n            values: []\r\n        }\r\n        return {\r\n            id: d[0][cfg.colorAttribute],\r\n            values: d.map(entry => {\r\n                return {\r\n                    date: d3.timeParse('%Y-%m-%d')(entry[cfg.xAttribute]),\r\n                    value: entry[cfg.yAttribute]\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    // Add X axis\r\n    let x = d3.scaleTime()\r\n        .domain([d3.min(data, entry => d3.min(entry.values, d => d.date)), d3.max(data, entry => d3.max(entry.values, d => d.date))])\r\n        .range([0, width])\r\n\r\n    let numberOfValues = cfg.numberOfValues\r\n    if (numberOfValues > 75)\r\n        numberOfValues = ~~(numberOfValues / 30)\r\n    else if (numberOfValues > 14)\r\n        numberOfValues = ~~(numberOfValues / 7)\r\n\r\n    svg.append('g')\r\n        .attr('transform', `translate(0, ${height})`)\r\n        .call(d3.axisBottom(x)\r\n            .ticks(numberOfValues)\r\n            .tickSizeOuter(0)\r\n            .tickFormat(d3.timeFormat('%d %b'))\r\n        )\r\n        .append('text')\r\n        .attr('x', 440)\r\n        .attr('y', 18)\r\n        .attr('dy', '.71em')\r\n        .attr('fill', 'white')\r\n        .text(cfg.xAttribute)\r\n\r\n    // Add Y axis\r\n    let y = d3.scaleLinear()\r\n        .domain([0, d3.max(data, e => d3.max(e.values, d => +d.value))])\r\n        .range([height, 0])\r\n\r\n    svg.append('g')\r\n        .call(d3.axisLeft(y)\r\n            .tickSizeOuter(0)\r\n            .tickFormat(d => {\r\n                if (d / 1000000 >= 1)\r\n                    return `${d / 1000000}M`\r\n                if (d / 1000 >= 1)\r\n                    return `${d / 1000}k`\r\n                return d\r\n            })\r\n        )\r\n        .append('text')\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('y', -45)\r\n        .attr('dy', '.71em')\r\n        .attr('fill', 'white')\r\n        .text(cfg.yAttribute)\r\n\r\n    // Add the areas\r\n    let area = d3.area()\r\n        .x(d => x(d.date))\r\n        .y0(height)\r\n        .y1(d => y(d.value))\r\n\r\n    svg.selectAll('.area')\r\n        .data(data).enter()\r\n        .append('g')\r\n        .attr('class', d => `area ${d.id}`)\r\n        .append('path')\r\n        .attr('fill', d => cfg.color(d.id))\r\n        .attr('fill-opacity', cfg.areaOpacity)\r\n        .attr('stroke', 'none')\r\n        .attr('d', d => area(d.values))\r\n\r\n    // Add the lines\r\n    let line = d3.line()\r\n        .x(d => x(d.date))\r\n        .y(d => y(d.value))\r\n\r\n    svg.selectAll('.line')\r\n        .data(data).enter()\r\n        .append('g')\r\n        .attr('class', d => `line ${d.id}`)\r\n        .append('path')\r\n        .attr('fill', 'none')\r\n        .attr('stroke', d => cfg.color(d.id))\r\n        .attr('stroke-width', cfg.lineWidth)\r\n        .attr('d', d => line(d.values))\r\n\r\n    // Add tooltip div\r\n    let tooltip = d3.select(parentSelector)\r\n        .append('div')\r\n        .style('opacity', 0)\r\n        .attr('class', 'tooltip')\r\n        .style('background-color', 'white')\r\n        .style('color', 'black')\r\n        .style('border', 'solid')\r\n        .style('border-width', '1px')\r\n        .style('border-radius', '5px')\r\n        .style('padding', '2px')\r\n\r\n    data.forEach((entry, idx) => {\r\n        svg.selectAll(`idx${idx}-dots`)\r\n            .data(entry.values)\r\n            .enter()\r\n            .append('circle')\r\n            .attr('fill', d => cfg.color(entry.id))\r\n            .attr('stroke', 'none')\r\n            .attr('cx', d => x(d.date))\r\n            .attr('cy', d => y(d.value))\r\n            .attr('r', cfg.dotRadius)\r\n            .on('mouseover', () => tooltip.style('opacity', 1))\r\n            .on('mousemove', function (d) {\r\n                tooltip\r\n                    .html(cfg.tooltipHtml(d))\r\n                    .style('left', `${d3.mouse(this)[0] + 90}px`)\r\n                    .style('top', `${d3.mouse(this)[1]}px`)\r\n            })\r\n            .on('mouseleave', () => tooltip\r\n                // .transition()\r\n                // .duration(200)\r\n                .style('opacity', 0)\r\n                .style('left', '0px')\r\n                .style('top', '0px')\r\n                .style('display', 'none')\r\n            )\r\n    })\r\n}\r\n\r\nmodule.exports = AreaChart","const d3 = require('d3')\r\n\r\nconst ForceLayout = function (parentSelector, data, options) {\r\n    const cfg = {\r\n        w: 600,\t\t\t\t                                  // Width of the circle\r\n        h: 600,\t\t\t\t                                  // Height of the circle\r\n        margin: { top: 10, right: 30, bottom: 30, left: 60 }, // The margins of the SVG\r\n        fociAttributes: [],\r\n        fociDomains: [[]],\r\n        dotRadius: d => 1.5,\r\n        onDotClick: d => { },\r\n        collideForceStrength: 1.5,\r\n        color: d => 'white',                \t              // Color function\r\n        tooltipHtml: d => cfg.fociAttributes.reduce((acc, curr) => {\r\n            if (acc.length !== 0) acc += '<br />'\r\n            return acc + `${curr}: ${d[curr]}`\r\n        }, '')\r\n    }\r\n\r\n    // Put all of the options into a variable called cfg\r\n    if ('undefined' !== typeof options) {\r\n        for (var i in options) {\r\n            if ('undefined' !== typeof options[i]) { cfg[i] = options[i] }\r\n        }\r\n    }\r\n\r\n    const parent = d3.select(parentSelector)\r\n\r\n    //Remove whatever chart with the same id/class was present before\r\n    parent.select('svg').remove()\r\n\r\n    let svg = parent\r\n        .append('svg')\r\n        .attr('width', cfg.w)\r\n        .attr('height', cfg.h)\r\n        .append('g')\r\n        .attr('transform', `translate(${cfg.w / 2}, ${cfg.h / 2})`)\r\n\r\n    let height = cfg.h - cfg.margin.top - cfg.margin.bottom\r\n    let width = cfg.w - cfg.margin.left - cfg.margin.right\r\n\r\n    let foci\r\n    let forceRange = [175, 0]\r\n    let x = width * 2 / 5\r\n    let y = height * 2 / 5\r\n    switch (cfg.fociAttributes.length) {\r\n        case 1:\r\n            foci = [{ x: 0, y: 0 }]\r\n            break\r\n        case 2:\r\n            foci = [{ x: -x, y: 0 }, { x: x, y: 0 }]\r\n            break\r\n        case 3:\r\n            foci = [{ x: 0, y: -y }, { x: -x, y: y }, { x: x, y: y }]\r\n            break\r\n        case 4:\r\n            foci = [{ x: -x, y: -y }, { x: -x, y: y }, { x: x, y: -y }, { x: x, y: y }]\r\n            break\r\n        default:\r\n            foci = []\r\n            break\r\n    }\r\n\r\n    let scaleMap = cfg.fociAttributes.reduce((acc, curr, idx) => {\r\n        acc[curr] = d3.scaleLinear()\r\n            .domain(cfg.fociDomains[idx])\r\n            .range(forceRange)\r\n        return acc\r\n    }, {})\r\n\r\n    let node = svg.selectAll('circle')\r\n        .data(data).enter()\r\n        .append('circle')\r\n        .attr('r', cfg.dotRadius)\r\n        .attr('fill', cfg.color)\r\n\r\n    let simulation = d3.forceSimulation()\r\n        .force('charge', d3.forceCollide(cfg.collideForceStrength))\r\n\r\n    cfg.fociAttributes.forEach((attr, idx) => {\r\n        svg.append('circle')\r\n            .attr('r', 15)\r\n            .attr('fill', 'grey')\r\n            .attr('opacity', .3)\r\n            .attr('transform', `translate(${foci[idx].x}, ${foci[idx].y})`)\r\n        svg.append('text')\r\n            .attr('text-anchor', 'middle')\r\n            .attr('alignment-baseline', 'middle')\r\n            .attr('transform', `translate(${foci[idx].x}, ${foci[idx].y})`)\r\n            .attr('fill', 'white')\r\n            .style('cursor', 'default')\r\n            .text(attr)\r\n        simulation.force(attr, d3.forceRadial(d => scaleMap[attr](d[attr]), foci[idx].x, foci[idx].y))\r\n    })\r\n\r\n    // Add tooltip div\r\n    let tooltip = d3.select(parentSelector)\r\n        .append('div')\r\n        .style('opacity', 0)\r\n        .attr('class', 'tooltip')\r\n        .style('background-color', 'white')\r\n        .style('color', 'black')\r\n        .style('border', 'solid')\r\n        .style('border-width', '1px')\r\n        .style('border-radius', '5px')\r\n        .style('padding', '2px')\r\n\r\n    simulation\r\n        .nodes(data)\r\n        .on('tick', () => {\r\n            node.attr('cx', d => d.x)\r\n                .attr('cy', d => d.y)\r\n                .on('mouseover', () => tooltip.style('opacity', 1))\r\n                .on('mousemove', function (d) {\r\n                    tooltip\r\n                        .html(cfg.tooltipHtml(d))\r\n                        .style('left', `${width / 2 + d3.mouse(this)[0] + 80}px`)\r\n                        .style('top', `${height / 2 + d3.mouse(this)[1]}px`)\r\n                })\r\n                .on('mouseleave', () => tooltip\r\n                    // .transition()\r\n                    // .duration(200)\r\n                    .style('opacity', 0)\r\n                    .style('left', '-200px')\r\n                    .style('top', '-200px')\r\n                )\r\n                .on('click', d => {\r\n                    tooltip\r\n                        .style('opacity', 0)\r\n                        .style('left', '0px')\r\n                        .style('top', '0px')\r\n                        .style('display', 'none')\r\n                    cfg.onDotClick(d)\r\n                })\r\n        })\r\n}\r\n\r\nmodule.exports = ForceLayout","const d3 = require('d3')\r\nconst cloud = require('d3-cloud')\r\n\r\nconst WordCloud = function (parentSelector, data, options) {\r\n    const cfg = {\r\n        w: 600,\t\t\t\t                                  // Width of the circle\r\n        h: 600,\t\t\t\t                                  // Height of the circle\r\n        margin: { top: 10, right: 30, bottom: 30, left: 60 }, // The margins of the SVG\r\n        wordsPadding: 5,\r\n        color: d3.scaleOrdinal(d3.schemeSet2),                // Color function\r\n        textAttribute: '',\r\n        valueAttribute: '',\r\n        maxSize: 15,\r\n        sizeScale: d => 15,\r\n        onWordClick: d => { }\r\n    }\r\n\r\n    // Put all of the options into a variable called cfg\r\n    if ('undefined' !== typeof options) {\r\n        for (var i in options) {\r\n            if ('undefined' !== typeof options[i]) { cfg[i] = options[i] }\r\n        }\r\n    }\r\n\r\n    const parent = d3.select(parentSelector)\r\n\r\n    //Remove whatever chart with the same id/class was present before\r\n    parent.select('svg').remove()\r\n\r\n    let svg = parent\r\n        .append('svg')\r\n        .attr('width', cfg.w)\r\n        .attr('height', cfg.h)\r\n        .append('g')\r\n        .attr('transform', `translate(${cfg.margin.left}, ${cfg.margin.top})`)\r\n\r\n    let height = cfg.h - cfg.margin.top - cfg.margin.bottom\r\n    let width = cfg.w - cfg.margin.left - cfg.margin.right\r\n\r\n    let layout = cloud()\r\n        .size([width, height])\r\n        .words(data.map(d => {\r\n            return {\r\n                text: d[cfg.textAttribute],\r\n                value: d[cfg.valueAttribute]\r\n            }\r\n        }))\r\n        .padding(cfg.wordsPadding)\r\n        .rotate(d => cfg.sizeScale(d.value) === cfg.maxSize ? 0 : ~~(Math.random() * 2) * 90)\r\n        .fontSize(d => cfg.sizeScale(d.value))\r\n        .on('end', draw)\r\n\r\n    layout.start()\r\n\r\n    function draw(words) {\r\n        svg.append('g')\r\n            .attr('transform', `translate(${layout.size()[0] / 2}, ${layout.size()[1] / 2})`)\r\n            .selectAll('text')\r\n            .data(words).enter()\r\n            .append('text')\r\n            .style('font-size', d => `${cfg.sizeScale(d.value)}px`)\r\n            .style('fill', (d, i) => cfg.color(i))\r\n            .style('cursor', 'pointer')\r\n            .attr('text-anchor', 'middle')\r\n            // .attr('font-family', 'Impact')\r\n            .attr('transform', d => `translate(${[d.x, d.y]})rotate(${d.rotate})`)\r\n            .text(d => d.text)\r\n            .on('click', d => cfg.onWordClick(d.text))\r\n    }\r\n}\r\n\r\nmodule.exports = WordCloud","const d3 = require('d3')\r\n\r\nconst BarChart = function (parentSelector, data, options) {\r\n    const cfg = {\r\n        w: 600,\t\t\t\t                                  // Width of the circle\r\n        h: 600,\t\t\t\t                                  // Height of the circle\r\n        margin: { top: 10, right: 30, bottom: 30, left: 60 }, // The margins of the SVG\r\n        xAttribute: '',\r\n        yAttribute: '',\r\n        idAttribute: '',\r\n        color: d3.scaleOrdinal(d3.schemeSet2),\t              // Color function\r\n        onBarClick: d => { },\r\n        tooltipHtml: d => `${cfg.yAttribute}: ${d[cfg.yAttribute]}<br />${cfg.xAttribute}: ${d[cfg.xAttribute]}`\r\n    }\r\n\r\n    // Put all of the options into a variable called cfg\r\n    if ('undefined' !== typeof options) {\r\n        for (var i in options) {\r\n            if ('undefined' !== typeof options[i]) { cfg[i] = options[i] }\r\n        }\r\n    }\r\n\r\n    const parent = d3.select(parentSelector)\r\n\r\n    //Remove whatever chart with the same id/class was present before\r\n    parent.select('svg').remove()\r\n\r\n    let svg = parent\r\n        .append('svg')\r\n        .attr('width', cfg.w)\r\n        .attr('height', cfg.h)\r\n        .append('g')\r\n        .attr('transform', `translate(${cfg.margin.left}, ${cfg.margin.top})`)\r\n\r\n    let height = cfg.h - cfg.margin.top - cfg.margin.bottom\r\n    let width = cfg.w - cfg.margin.left - cfg.margin.right\r\n\r\n    // Add X axis\r\n    let x = d3.scaleLinear()\r\n        .domain([0, d3.max(data, d => d[cfg.xAttribute])])\r\n        .range([0, width])\r\n\r\n    svg.append('g')\r\n        .attr('transform', `translate(0, ${height})`)\r\n        .call(d3.axisBottom(x))\r\n        .append('text')\r\n        .attr('x', 440)\r\n        .attr('y', 18)\r\n        .attr('dy', '.71em')\r\n        .attr('fill', 'white')\r\n        .text(cfg.xAttribute)\r\n\r\n    // Add Y axis\r\n    let y = d3.scaleBand()\r\n        .domain(data.map(d => d[cfg.idAttribute]))\r\n        .range([0, height])\r\n        .padding(.1)\r\n\r\n    // Add tooltip div\r\n    let tooltip = d3.select(parentSelector)\r\n        .append('div')\r\n        .style('opacity', 0)\r\n        .attr('class', 'tooltip')\r\n        .style('background-color', 'white')\r\n        .style('color', 'black')\r\n        .style('border', 'solid')\r\n        .style('border-width', '1px')\r\n        .style('border-radius', '5px')\r\n        .style('padding', '2px')\r\n\r\n    // Add bars\r\n    svg.selectAll('myRect')\r\n        .data(data).enter()\r\n        .append('rect')\r\n        .attr('x', x(0))\r\n        .attr('y', d => y(d[cfg.idAttribute]))\r\n        .attr('width', d => x(d[cfg.xAttribute]))\r\n        .attr('height', y.bandwidth())\r\n        .attr('fill', cfg.color)\r\n        .on('mouseover', () => tooltip.style('opacity', 1))\r\n        .on('mousemove', function (d) {\r\n            tooltip\r\n                .html(cfg.tooltipHtml(d))\r\n                .style('left', `${d3.mouse(this)[0] + 90}px`)\r\n                .style('top', `${d3.mouse(this)[1]}px`)\r\n        })\r\n        .on('mouseleave', () => tooltip\r\n            // .transition()\r\n            // .duration(200)\r\n            .style('opacity', 0)\r\n            .style('left', '-200px')\r\n            .style('top', '-200px')\r\n        )\r\n        .on('click', d => {\r\n            tooltip\r\n                .style('opacity', 0)\r\n                .style('left', '0px')\r\n                .style('top', '0px')\r\n                .style('display', 'none')\r\n            cfg.onBarClick(d)\r\n        })\r\n\r\n    svg.append('g')\r\n        .call(d3.axisLeft(y)\r\n            .tickFormat(id => data.filter(e => e[cfg.idAttribute] === id)[0][cfg.yAttribute])\r\n        )\r\n        .selectAll('text')\r\n        .attr('x', 6)\r\n        .style('text-anchor', 'start')\r\n}\r\n\r\nmodule.exports = BarChart","import React, { Component } from 'react'\r\nimport { Jumbotron, Button, Table, Modal, Form } from 'react-bootstrap'\r\n\r\nlet monthAbbreviations = {\r\n    '01': 'Jan',\r\n    '02': 'Feb',\r\n    '03': 'Mar',\r\n    '04': 'Apr',\r\n    '05': 'May',\r\n    '06': 'Jun',\r\n    '07': 'Jul',\r\n    '08': 'Aug',\r\n    '09': 'Sept',\r\n    '10': 'Oct',\r\n    '11': 'Nov',\r\n    '12': 'Dec',\r\n}\r\n\r\nfunction searchInTracks(tracks, search) {\r\n    search = search.toLocaleLowerCase('en-US')\r\n        .normalize('NFD')\r\n        .replace(/[\\u0300-\\u036f]/g, '')\r\n    return tracks.filter(t =>\r\n        t.Artist.toLocaleLowerCase('en-US')\r\n            .normalize('NFD')\r\n            .replace(/[\\u0300-\\u036f]/g, '')\r\n            .includes(search)\r\n        || t['Track Name'].toLocaleLowerCase('en-US')\r\n            .normalize('NFD')\r\n            .replace(/[\\u0300-\\u036f]/g, '')\r\n            .includes(search)\r\n    )\r\n}\r\n\r\nexport default class Tracks extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            tableHeight: 0,\r\n            showDateForm: false,\r\n            showFiltersForm: false\r\n        }\r\n\r\n        this.changedDates = false\r\n        this.topJumbotronRef = React.createRef()\r\n        this.bottomJumbotronRef = React.createRef()\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        let date = props.date.map(d => {\r\n            let dateSplit = d.split('-')\r\n            return `${dateSplit[2]} ${monthAbbreviations[dateSplit[1]].toUpperCase()}`\r\n        })\r\n\r\n        return {\r\n            date: date.join(' - '),\r\n            tracks: searchInTracks(props.tracks, props.search),\r\n            search: props.search\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ tableHeight: window.innerHeight - this.topJumbotronRef.current.clientHeight - this.bottomJumbotronRef.current.clientHeight })\r\n        window.addEventListener('resize', this.updateHeights)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateHeights)\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        this.changedDates = this.props.date.length !== nextProps.date.length\r\n        return true\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.changedDates) {\r\n            this.updateHeights()\r\n            this.changedDates = false\r\n        }\r\n    }\r\n\r\n    updateHeights = () => {\r\n        this.setState({\r\n            tableHeight: window.innerHeight - this.topJumbotronRef.current.clientHeight - this.bottomJumbotronRef.current.clientHeight\r\n        })\r\n    }\r\n\r\n    handleChangeDateOnClick = () => {\r\n        this.setState({ showDateForm: true })\r\n    }\r\n\r\n    handleFiltersOnClick = () => {\r\n        this.setState({ showFiltersForm: true })\r\n    }\r\n\r\n    handleDateFormOnCancel = () => {\r\n        this.setState({ showDateForm: false })\r\n    }\r\n\r\n    handleFiltersFormOnCancel = () => {\r\n        this.setState({ showFiltersForm: false })\r\n    }\r\n\r\n    handleDateFormOnSave = (dateArray) => {\r\n        this.setState({ showDateForm: false })\r\n        this.props.onDateChange(dateArray)\r\n    }\r\n\r\n    handleFiltersFormOnSave = (filters) => {\r\n        this.setState({ showFiltersForm: false })\r\n        this.props.onFiltersChange(filters)\r\n    }\r\n\r\n    handleOnSearchChange = (ev) => {\r\n        this.props.onSearchChange(ev.target.value)\r\n    }\r\n\r\n    render() {\r\n        let jumbotronStyle = {\r\n            marginBottom: 0,\r\n            padding: '2rem 2rem'\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Jumbotron ref={this.topJumbotronRef} style={jumbotronStyle}>\r\n                    <h1>{this.state.date}</h1>\r\n                    <p>\r\n                        <Button variant=\"outline-light\" onClick={this.handleChangeDateOnClick}>Change date(s)</Button>\r\n                        &nbsp;\r\n                        <Button variant=\"outline-light\" onClick={this.handleFiltersOnClick}>Filter</Button>\r\n                    </p>\r\n                    <Form.Control type=\"search\" placeholder=\"Search...\" value={this.props.search} onChange={this.handleOnSearchChange} />\r\n                </Jumbotron>\r\n                <div style={{ overflow: 'auto', height: `${this.state.tableHeight}px` }}>\r\n                    <Table responsive hover>\r\n                        <tbody>\r\n                            {this.state.tracks.map(t => {\r\n                                let style = { cursor: 'pointer' }\r\n                                if (this.props.selectedTracks[t.Id])\r\n                                    style.backgroundColor = this.props.selectedTracks[t.Id].color\r\n                                return (\r\n                                    <tr key={t.Position} onClick={() => this.props.onTrackClick(t)} style={style}>\r\n                                        <td><b>{t.Position}</b></td>\r\n                                        <td><b>{t['Track Name']}</b> {t.Explicit ? '\\ud83c\\udd74' : ''} <small>by {t.Artist}</small></td>\r\n                                        <td><b>{t.Streams}</b></td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n                <Jumbotron ref={this.bottomJumbotronRef} style={jumbotronStyle}>\r\n                    <div className=\"lead\">{this.props.numExplicit} &#x1f174; tracks in {this.props.tracks.length}</div>\r\n                </Jumbotron>\r\n                <DateForm maxDate={this.props.maxDate} show={this.state.showDateForm}\r\n                    onCancel={this.handleDateFormOnCancel} onSave={this.handleDateFormOnSave}\r\n                />\r\n                <FiltersForm show={this.state.showFiltersForm} onCancel={this.handleFiltersFormOnCancel}\r\n                    onSave={this.handleFiltersFormOnSave}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nclass DateForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            check: 'singleDay',\r\n            day: '',\r\n            fromDay: '',\r\n            toDay: ''\r\n        }\r\n    }\r\n\r\n    handleOnCheckChange = (event) => {\r\n        this.setState({ check: event.target.name })\r\n    }\r\n\r\n    handleOnChange = (ev) => {\r\n        this.setState({ [ev.target.name]: ev.target.value })\r\n    }\r\n\r\n    handleOnSave = () => {\r\n        let dateArray = []\r\n        if (this.state.check === 'singleDay') {\r\n            if (this.state.day.length === 0) return\r\n            dateArray.push(this.state.day)\r\n        } else if (this.state.check === 'timeInterval') {\r\n            if (this.state.fromDay.length === 0 || this.state.toDay.length === 0) return\r\n            dateArray.push(this.state.fromDay)\r\n            dateArray.push(this.state.toDay)\r\n        }\r\n\r\n        this.props.onSave(dateArray)\r\n    }\r\n\r\n    render() {\r\n        let maxDate = this.props.maxDate\r\n        return (\r\n            <Modal show={this.props.show} onHide={this.props.onCancel} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Select Date(s)</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form inline>\r\n                        <Form.Check type=\"radio\">\r\n                            <Form.Check.Input name=\"singleDay\" type=\"radio\"\r\n                                onChange={this.handleOnCheckChange} checked={this.state.check === \"singleDay\"}\r\n                            />\r\n                            <Form.Check.Label>Single Day:</Form.Check.Label>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <Form.Control name=\"day\" value={this.state.day} disabled={this.state.check !== \"singleDay\"}\r\n                                onChange={this.handleOnChange} type=\"date\" min=\"2019-01-01\" max={maxDate}\r\n                            />\r\n                        </Form.Check>\r\n                        <Form.Check type=\"radio\">\r\n                            <Form.Check.Input name=\"timeInterval\" type=\"radio\"\r\n                                onChange={this.handleOnCheckChange} checked={this.state.check === \"timeInterval\"}\r\n                            />\r\n                            <Form.Check.Label>Interval:</Form.Check.Label>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <Form.Control name=\"fromDay\" value={this.state.fromDay} disabled={this.state.check !== \"timeInterval\"}\r\n                                min=\"2019-01-01\" max={this.state.toDay.length === 0 ? maxDate : this.state.toDay}\r\n                                onChange={this.handleOnChange} type=\"date\"\r\n                            />\r\n                            &nbsp;to&nbsp;\r\n                            <Form.Control name=\"toDay\" value={this.state.toDay} disabled={this.state.check !== \"timeInterval\"}\r\n                                min={this.state.fromDay.length === 0 ? \"2019-01-01\" : this.state.fromDay} max={maxDate}\r\n                                onChange={this.handleOnChange} type=\"date\"\r\n                            />\r\n                        </Form.Check>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.props.onCancel}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={this.handleOnSave}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nclass FiltersForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            'Danceability': {\r\n                checked: false,\r\n                values: [0, 1]\r\n            },\r\n            'Energy': {\r\n                checked: false,\r\n                values: [0, 1]\r\n            },\r\n            'Key': {\r\n                checked: false,\r\n                values: [-1, 11]\r\n            },\r\n            'Loudness': {\r\n                checked: false,\r\n                values: [-60, 0]\r\n            },\r\n            'Mode': {\r\n                checked: false,\r\n                values: [0, 1]\r\n            },\r\n            'Speechiness': {\r\n                checked: false,\r\n                values: [0, 1]\r\n            },\r\n            'Acousticness': {\r\n                checked: false,\r\n                values: [0, 1]\r\n            },\r\n            'Instrumentalness': {\r\n                checked: false,\r\n                values: [0, 1]\r\n            },\r\n            'Liveness': {\r\n                checked: false,\r\n                values: [0, 1]\r\n            },\r\n            'Valence': {\r\n                checked: false,\r\n                values: [0, 1]\r\n            },\r\n            'Tempo': {\r\n                checked: false,\r\n                values: [0, 300]\r\n            },\r\n            'Duration ms': {\r\n                checked: false,\r\n                values: [0, 1000000]\r\n            },\r\n            'Time Signature': {\r\n                checked: false,\r\n                values: [1, 5]\r\n            },\r\n            'Streams': {\r\n                checked: false,\r\n                values: [0, 120000000000]\r\n            },\r\n            'Explicit': {\r\n                checked: false,\r\n                values: [false]\r\n            },\r\n        }\r\n    }\r\n\r\n    handleOnCheckChange = (ev) => {\r\n        let name = ev.target.name.split('-')[0]\r\n        let obj = this.state[name]\r\n        obj.checked = ev.target.checked\r\n        this.setState({ [name]: obj })\r\n    }\r\n\r\n    handleOnChange = (ev) => {\r\n        let split = ev.target.name.split('-')\r\n        let name = split[0]\r\n        let property = split[1]\r\n        let obj = this.state[name]\r\n        switch (property) {\r\n            case 'max':\r\n                obj.values[1] = ev.target.value\r\n                break\r\n            case 'min':\r\n            default:\r\n                obj.values[0] = ev.target.value\r\n                break\r\n        }\r\n        this.setState({ [name]: obj })\r\n    }\r\n\r\n    handleOnSave = () => {\r\n        let filters = []\r\n        for (const key in this.state) {\r\n            if (this.state.hasOwnProperty(key)) {\r\n                const element = this.state[key]\r\n                if (!element.checked) continue\r\n                if (element.values.length === 2)\r\n                    filters.push(t => +t[key] >= element.values[0] && +t[key] <= element.values[1])\r\n                else {\r\n                    let value = element.values[0] === 'true'\r\n                    filters.push(t => t[key] === value)\r\n                }\r\n            }\r\n        }\r\n        this.props.onSave(filters)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal show={this.props.show} onHide={this.props.onCancel} centered scrollable>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Select Filters</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form inline>\r\n                        {\r\n                            [\r\n                                {\r\n                                    name: 'Danceability',\r\n                                    min: 0,\r\n                                    max: 1,\r\n                                    step: .001\r\n                                },\r\n                                {\r\n                                    name: 'Energy',\r\n                                    min: 0,\r\n                                    max: 1,\r\n                                    step: .001\r\n                                },\r\n                                {\r\n                                    name: 'Speechiness',\r\n                                    min: 0,\r\n                                    max: 1,\r\n                                    step: .001\r\n                                },\r\n                                {\r\n                                    name: 'Acousticness',\r\n                                    min: 0,\r\n                                    max: 1,\r\n                                    step: .001\r\n                                },\r\n                                {\r\n                                    name: 'Instrumentalness',\r\n                                    min: 0,\r\n                                    max: 1,\r\n                                    step: .001\r\n                                },\r\n                                {\r\n                                    name: 'Liveness',\r\n                                    min: 0,\r\n                                    max: 1,\r\n                                    step: .001\r\n                                },\r\n                                {\r\n                                    name: 'Valence',\r\n                                    min: 0,\r\n                                    max: 1,\r\n                                    step: .001\r\n                                },\r\n                                {\r\n                                    name: 'Key',\r\n                                    min: -1,\r\n                                    max: 11,\r\n                                    step: 1\r\n                                },\r\n                                {\r\n                                    name: 'Mode',\r\n                                    min: 0,\r\n                                    max: 1,\r\n                                    step: 1\r\n                                },\r\n                                {\r\n                                    name: 'Tempo',\r\n                                    min: 0,\r\n                                    max: 300,\r\n                                    step: 1\r\n                                },\r\n                                {\r\n                                    name: 'Time Signature',\r\n                                    min: 1,\r\n                                    max: 5,\r\n                                    step: 1\r\n                                },\r\n                                {\r\n                                    name: 'Loudness',\r\n                                    min: -60,\r\n                                    max: 0,\r\n                                    step: .001\r\n                                },\r\n                                {\r\n                                    name: 'Duration ms',\r\n                                    min: 0,\r\n                                    max: 1000000,\r\n                                    step: 1\r\n                                },\r\n                                {\r\n                                    name: 'Streams',\r\n                                    min: 0,\r\n                                    max: 120000000000,\r\n                                    step: 1\r\n                                },\r\n                            ]\r\n                                .map((f, idx) => (\r\n                                    <Form.Check key={idx}>\r\n                                        <Form.Check.Input name={`${f.name}-checked`}\r\n                                            onChange={this.handleOnCheckChange} checked={this.state[f.name].checked}\r\n                                        />\r\n                                        <Form.Check.Label>{f.name}</Form.Check.Label>\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        <Form.Control name={`${f.name}-min`} value={this.state[f.name].values[0]}\r\n                                            disabled={!this.state[f.name].checked}\r\n                                            min={f.min} max={this.state[f.name].values[1]} step={f.step}\r\n                                            onChange={this.handleOnChange} type=\"number\"\r\n                                        />\r\n                                        &nbsp;to&nbsp;\r\n                                        <Form.Control name={`${f.name}-max`} value={this.state[f.name].values[1]}\r\n                                            disabled={!this.state[f.name].checked}\r\n                                            min={this.state[f.name].values[0]} max={f.max} step={f.step}\r\n                                            onChange={this.handleOnChange} type=\"number\"\r\n                                        />\r\n                                    </Form.Check>\r\n                                ))\r\n                        }\r\n                        <Form.Check>\r\n                            <Form.Check.Input name=\"Explicit-checked\"\r\n                                onChange={this.handleOnCheckChange} checked={this.state.Explicit.checked}\r\n                            />\r\n                            <Form.Check.Label>Explicit</Form.Check.Label>\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <Form.Control as=\"select\" name=\"Explicit-select\" value={this.state.Explicit.values[0]}\r\n                                disabled={!this.state.Explicit.checked} onChange={this.handleOnChange}>\r\n                                <option value={true}>true</option>\r\n                                <option value={false}>false</option>\r\n                            </Form.Control>\r\n                        </Form.Check>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.props.onCancel}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={this.handleOnSave}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Tracks from './components/Tracks'\r\nimport Visualizations from './components/Visualizations'\r\n\r\nconst d3 = require('d3')\r\n\r\nconst originalDataset = require('./data/spotify-charts.json')\r\n// Search for duplicated tracks with different ids\r\nfor (let i = 0; i < originalDataset.length; i++) {\r\n    const t1 = originalDataset[i]\r\n    for (let j = i + 1; j < originalDataset.length; j++) {\r\n        const t2 = originalDataset[j]\r\n        if (\r\n            t1['Track Name'] === t2['Track Name'] &&\r\n            t1.Artist === t2.Artist &&\r\n            t1.Id !== t2.Id\r\n        )\r\n            originalDataset[j].Id = t1.Id\r\n    }\r\n}\r\n\r\nconst allTracksMap = originalDataset.reduce(\r\n    (acc, t) => {\r\n        if (!acc[t.Id]) {\r\n            acc[t.Id] = {\r\n                track: t,\r\n                allEntries: originalDataset.filter(e => e.Id === t.Id)\r\n            }\r\n        }\r\n        return acc\r\n    },\r\n    {}\r\n)\r\nconst MAX_TRACKS_SELECTED = 3\r\nconst colors = ['Magenta', 'OrangeRed', 'Chartreuse']\r\nconst defaultColors = d3.scaleOrdinal(d3.schemeDark2)\r\n\r\nconsole.log(originalDataset[0])\r\n/*\r\nlet res = {\r\n    'count': 0,\r\n    'Danceability': 0,\r\n    'Energy': 0,\r\n    'Key': 0,\r\n    'Loudness': 0,\r\n    'Mode': 0,\r\n    'Speechiness': 0,\r\n    'Acousticness': 0,\r\n    'Instrumentalness': 0,\r\n    'Liveness': 0,\r\n    'Valence': 0,\r\n    'Tempo': 0,\r\n    'Duration ms': 0,\r\n    'Time Signature': 0,\r\n    'Position': 0,\r\n    'Track Name': 0,\r\n    'Artist': 0,\r\n    'Streams': 0,\r\n    'URL': 0,\r\n    'Date': 0,\r\n    'Id': 0,\r\n    'Album Art URL': 0,\r\n    'Explicit': 0,\r\n    'Preview URL': 0\r\n}\r\n\r\noriginalDataset.forEach(element => {\r\n    res.count++\r\n    for (const key in element) {\r\n        if (element.hasOwnProperty(key)) {\r\n            res[key]++\r\n        }\r\n    }\r\n})\r\n\r\nconsole.log(res)\r\n*/\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let date = [originalDataset[0].Date]\r\n        let tracks = this.getTracksByDates(date)\r\n        this.state = {\r\n            maxDate: originalDataset[0].Date,\r\n            tracks: tracks,\r\n            selectedTracks: {},\r\n            nSelectedTracks: 0,\r\n            defaultTracks: {\r\n                [tracks[0].Id]: {\r\n                    color: defaultColors(0),\r\n                    track: tracks[0],\r\n                    allEntries: allTracksMap[tracks[0].Id].allEntries\r\n                },\r\n                [tracks[1].Id]: {\r\n                    color: defaultColors(1),\r\n                    track: tracks[1],\r\n                    allEntries: allTracksMap[tracks[1].Id].allEntries\r\n                },\r\n                [tracks[2].Id]: {\r\n                    color: defaultColors(2),\r\n                    track: tracks[2],\r\n                    allEntries: allTracksMap[tracks[2].Id].allEntries\r\n                },\r\n            },\r\n            filters: [],\r\n            numExplicit: this.countExplicitTracks(tracks),\r\n            date: date,\r\n            search: ''\r\n        }\r\n    }\r\n\r\n    getTracksByDates(dates) {\r\n        let dataset = JSON.parse(JSON.stringify(originalDataset))\r\n\r\n        if (dates.length === 1)\r\n            return dataset.filter(t => t.Date === dates[0])\r\n\r\n        if (dates.length === 2) {\r\n            let fromDate = new Date(dates[0]).valueOf()\r\n            let toDate = new Date(dates[1]).valueOf()\r\n            let tracks = dataset.filter(t => {\r\n                let date = new Date(t.Date)\r\n                return date >= fromDate && date <= toDate\r\n            })\r\n            let tracksMap = tracks.reduce((acc, t) => {\r\n                if (acc[t.Id]) {\r\n                    acc[t.Id].Streams = `${+acc[t.Id].Streams + +t.Streams}`\r\n                    return acc\r\n                }\r\n                acc[t.Id] = t\r\n                return acc\r\n            }, {})\r\n            tracks = []\r\n            for (const key in tracksMap)\r\n                if (tracksMap.hasOwnProperty(key))\r\n                    tracks.push(tracksMap[key])\r\n            tracks = tracks.sort((t1, t2) => (+t2.Streams) - (+t1.Streams))\r\n            tracks = tracks.map((t, idx) => {\r\n                t.Position = `${idx + 1}`\r\n                return t\r\n            })\r\n            return tracks\r\n        }\r\n\r\n        return null\r\n    }\r\n\r\n    filterTracks(tracks, filters) {\r\n        return tracks.filter(t => filters.reduce(\r\n            (acc, curr) => acc && curr(t),\r\n            true\r\n        ))\r\n    }\r\n\r\n    countExplicitTracks(tracks) {\r\n        return tracks.reduce((acc, t) => t.Explicit ? acc + 1 : acc, 0)\r\n    }\r\n\r\n    getDefaultTracks(tracks) {\r\n        switch (tracks.length) {\r\n            case 0:\r\n                return {}\r\n            case 1:\r\n                return {\r\n                    [tracks[0].Id]: {\r\n                        color: defaultColors(0),\r\n                        track: tracks[0],\r\n                        allEntries: allTracksMap[tracks[0].Id].allEntries\r\n                    }\r\n                }\r\n            case 2:\r\n                return {\r\n                    [tracks[0].Id]: {\r\n                        color: defaultColors(0),\r\n                        track: tracks[0],\r\n                        allEntries: allTracksMap[tracks[0].Id].allEntries\r\n                    },\r\n                    [tracks[1].Id]: {\r\n                        color: defaultColors(1),\r\n                        track: tracks[1],\r\n                        allEntries: allTracksMap[tracks[1].Id].allEntries\r\n                    }\r\n                }\r\n            default:\r\n                return {\r\n                    [tracks[0].Id]: {\r\n                        color: defaultColors(0),\r\n                        track: tracks[0],\r\n                        allEntries: allTracksMap[tracks[0].Id].allEntries\r\n                    },\r\n                    [tracks[1].Id]: {\r\n                        color: defaultColors(1),\r\n                        track: tracks[1],\r\n                        allEntries: allTracksMap[tracks[1].Id].allEntries\r\n                    },\r\n                    [tracks[2].Id]: {\r\n                        color: defaultColors(2),\r\n                        track: tracks[2],\r\n                        allEntries: allTracksMap[tracks[2].Id].allEntries\r\n                    },\r\n                }\r\n        }\r\n    }\r\n\r\n    handleOnDateChange = (days) => {\r\n        let tracks = this.filterTracks(this.getTracksByDates(days), this.state.filters)\r\n        let numExplicit = this.countExplicitTracks(tracks)\r\n        for (const selTrack in this.state.selectedTracks)\r\n            if (this.state.selectedTracks.hasOwnProperty(selTrack) && this.state.selectedTracks[selTrack])\r\n                colors.push(this.state.selectedTracks[selTrack].color)\r\n        let defaultTracks = this.getDefaultTracks(tracks)\r\n        this.setState({\r\n            tracks: tracks,\r\n            numExplicit: numExplicit,\r\n            selectedTracks: {},\r\n            nSelectedTracks: 0,\r\n            defaultTracks: defaultTracks,\r\n            date: days\r\n        })\r\n    }\r\n\r\n    handleOnFiltersChange = (filters) => {\r\n        let tracks = this.filterTracks(this.getTracksByDates(this.state.date), filters)\r\n        let numExplicit = this.countExplicitTracks(tracks)\r\n        for (const selTrack in this.state.selectedTracks)\r\n            if (this.state.selectedTracks.hasOwnProperty(selTrack) && this.state.selectedTracks[selTrack])\r\n                colors.push(this.state.selectedTracks[selTrack].color)\r\n        let defaultTracks = this.getDefaultTracks(tracks)\r\n        this.setState({\r\n            tracks: tracks,\r\n            numExplicit: numExplicit,\r\n            selectedTracks: {},\r\n            nSelectedTracks: 0,\r\n            defaultTracks: defaultTracks,\r\n            filters: filters\r\n        })\r\n    }\r\n\r\n    handleOnTrackClick = (track) => {\r\n        let selectedTracks = this.state.selectedTracks\r\n        let id\r\n        if ('string' === typeof track) {\r\n            id = track\r\n            track = allTracksMap[id].track\r\n        }\r\n        else\r\n            id = track.Id\r\n        if (selectedTracks[id]) {\r\n            colors.push(selectedTracks[id].color)\r\n            selectedTracks[id] = undefined\r\n            this.setState({\r\n                selectedTracks: selectedTracks,\r\n                nSelectedTracks: this.state.nSelectedTracks - 1\r\n            })\r\n            return\r\n        }\r\n        if (this.state.nSelectedTracks === MAX_TRACKS_SELECTED) {\r\n            alert(`You have already reached the maximum number of tracks selected, ${MAX_TRACKS_SELECTED}, deselect one`)\r\n            return\r\n        }\r\n        selectedTracks[id] = {\r\n            color: colors.pop(),\r\n            track: track,\r\n            allEntries: allTracksMap[id].allEntries\r\n        }\r\n        this.setState({\r\n            selectedTracks: selectedTracks,\r\n            nSelectedTracks: this.state.nSelectedTracks + 1\r\n        })\r\n    }\r\n\r\n    handleOnSearchChange = (search) => {\r\n        this.setState({\r\n            search: search\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid={true}>\r\n                <Row>\r\n                    <Col xs md lg=\"3\">\r\n                        <Tracks tracks={this.state.tracks} date={this.state.date} maxDate={this.state.maxDate}\r\n                            numExplicit={this.state.numExplicit} onDateChange={this.handleOnDateChange}\r\n                            onTrackClick={this.handleOnTrackClick} onFiltersChange={this.handleOnFiltersChange}\r\n                            selectedTracks={this.state.nSelectedTracks === 0 ? this.state.defaultTracks : this.state.selectedTracks}\r\n                            search={this.state.search} onSearchChange={this.handleOnSearchChange}\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <Visualizations tracks={this.state.tracks}\r\n                            selectedTracks={this.state.nSelectedTracks === 0 ? this.state.defaultTracks : this.state.selectedTracks}\r\n                            allTracksMap={allTracksMap} onTrackClick={this.handleOnTrackClick} onSearchChange={this.handleOnSearchChange}\r\n                            date={this.state.date}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nconst d3 = require('d3')\r\nlet RadarChart = require('./d3/RadarChart')\r\n\r\nexport default class SpiderChart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            means: {}\r\n        }\r\n        this.spiderChartDivRef = React.createRef()\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        let means = props.tracks.reduce((acc, t) => {\r\n            return {\r\n                Acousticness: acc.Acousticness + t.Acousticness,\r\n                Danceability: acc.Danceability + t.Danceability,\r\n                Energy: acc.Energy + t.Energy,\r\n                Instrumentalness: acc.Instrumentalness + t.Instrumentalness,\r\n                Liveness: acc.Liveness + t.Liveness,\r\n                Speechiness: acc.Speechiness + t.Speechiness,\r\n                Valence: acc.Valence + t.Valence\r\n            }\r\n        }, {\r\n            Acousticness: 0,\r\n            Danceability: 0,\r\n            // 'Duration ms': 0,\r\n            Energy: 0,\r\n            Instrumentalness: 0,\r\n            // Key: 6,\r\n            Liveness: 0,\r\n            // Loudness: -6.401,\r\n            // Mode: 0,\r\n            Speechiness: 0,\r\n            // Tempo: 98.078,\r\n            // 'Time Signature': 4,\r\n            Valence: 0,\r\n        })\r\n        means.Acousticness /= props.tracks.length\r\n        means.Danceability /= props.tracks.length\r\n        means.Energy /= props.tracks.length\r\n        means.Instrumentalness /= props.tracks.length\r\n        means.Liveness /= props.tracks.length\r\n        means.Speechiness /= props.tracks.length\r\n        means.Valence /= props.tracks.length\r\n        return { means: means }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addD3()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.addD3()\r\n    }\r\n\r\n    addD3() {\r\n        let colors = ['DarkKhaki']\r\n        let data = [\r\n            {\r\n                name: 'mean',\r\n                axes: [\r\n                    { axis: 'Acousticness', value: this.state.means.Acousticness },\r\n                    { axis: 'Danceability', value: this.state.means.Danceability },\r\n                    { axis: 'Energy', value: this.state.means.Energy },\r\n                    { axis: 'Instrumentalness', value: this.state.means.Instrumentalness },\r\n                    { axis: 'Liveness', value: this.state.means.Liveness },\r\n                    { axis: 'Speechiness', value: this.state.means.Speechiness },\r\n                    { axis: 'Valence', value: this.state.means.Valence }\r\n                ],\r\n                color: colors[0]\r\n            }\r\n        ]\r\n        for (const track in this.props.selectedTracks) {\r\n            if (this.props.selectedTracks.hasOwnProperty(track)) {\r\n                let t = this.props.selectedTracks[track]\r\n                if (!t) continue\r\n                let color = t.color\r\n                t = t.track\r\n                colors.push(color)\r\n                data.push({\r\n                    name: t['Track Name'],\r\n                    axes: [\r\n                        { axis: 'Acousticness', value: t.Acousticness },\r\n                        { axis: 'Danceability', value: t.Danceability },\r\n                        { axis: 'Energy', value: t.Energy },\r\n                        { axis: 'Instrumentalness', value: t.Instrumentalness },\r\n                        { axis: 'Liveness', value: t.Liveness },\r\n                        { axis: 'Speechiness', value: t.Speechiness },\r\n                        { axis: 'Valence', value: t.Valence }\r\n                    ],\r\n                    color: color\r\n                })\r\n            }\r\n        }\r\n        \r\n        RadarChart('#spider-chart', data, {\r\n            w: this.spiderChartDivRef.current.offsetWidth,\r\n            h: this.props.height - 60,\r\n            maxValue: 1,\r\n            roundStrokes: false,\r\n            margin: { top: 30, right: 0, bottom: 30, left: 0 },\r\n            format: '.3f',\r\n            unit: '',\r\n            color: d3.scaleOrdinal().range(colors),\r\n            legend: { title: 'Tracks:', translateX: -120, translateY: 40 },\r\n            opacityArea: .05,\r\n            opacityCircles: .05,\r\n            onLabelClick: this.props.onLabelClick\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div id=\"spider-chart\" ref={this.spiderChartDivRef}></div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nconst d3ScatterPlot = require('./d3/ScatterPlot')\r\n\r\nconst options = [\r\n    'Acousticness',\r\n    'Danceability',\r\n    'Duration ms',\r\n    'Energy',\r\n    'Instrumentalness',\r\n    'Key',\r\n    'Liveness',\r\n    'Loudness',\r\n    'Mode',\r\n    'Speechiness',\r\n    'Tempo',\r\n    'Time Signature',\r\n    'Valence',\r\n]\r\n\r\nexport default class ScatterPlot extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n        this.scatterPlotDivRef = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addD3()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.addD3()\r\n    }\r\n\r\n    addD3() {\r\n        d3ScatterPlot('#scatter-plot', this.props.tracks, {\r\n            w: this.scatterPlotDivRef.current.offsetWidth,\r\n            h: this.props.height - 60,\r\n            // margin: { top: 30, right: 0, bottom: 30, left: 0 },\r\n            margin: { top: 20, right: 30, bottom: 20, left: 65 },\r\n            xDomain: [this.getFeatureMin(), this.getFeatureMax()],\r\n            xAttribute: this.props.feature,\r\n            yDomain: [0, this.props.tracks.length !== 0 ? this.props.tracks[0].Streams : 0],\r\n            yAttribute: 'Streams',\r\n            dotRadius: track => {\r\n                if (this.props.selectedTracks[track.Id])\r\n                    return 3.0\r\n                return 1.5\r\n            },\r\n            color: track => {\r\n                if (this.props.selectedTracks[track.Id])\r\n                    return this.props.selectedTracks[track.Id].color\r\n                return 'white'\r\n            },\r\n            onDotClick: this.props.onTrackClick,\r\n            tooltipHtml: t => `Track Name: ${t['Track Name']}<br />${this.props.feature}: ${t[this.props.feature]}<br />Streams: ${t.Streams}`\r\n        })\r\n    }\r\n\r\n    getFeatureMax() {\r\n        if (this.props.tracks.length === 0) return 0\r\n        let max = this.props.tracks.reduce(\r\n            (acc, t) => t[this.props.feature] > acc ? t[this.props.feature] : acc,\r\n            this.props.tracks[0][this.props.feature]\r\n        )\r\n        if (max < 1 && max > 0) return 1\r\n        if (max > -60 && max < 0) return 0\r\n        return max\r\n    }\r\n\r\n    getFeatureMin() {\r\n        if (this.props.tracks.length === 0) return 0\r\n        let min = this.props.tracks.reduce(\r\n            (acc, t) => t[this.props.feature] < acc ? t[this.props.feature] : acc,\r\n            this.props.tracks[0][this.props.feature]\r\n        )\r\n        if (min < 1 && min > 0) return 0\r\n        if (min > -60 && min < 0) return -60\r\n        return min\r\n    }\r\n\r\n    handleOnFeatureChange = (ev) => {\r\n        this.props.onFeatureChange(ev.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form inline style={{ marginTop: 10, float: 'right' }}>\r\n                    <Form.Control as=\"select\" value={this.props.feature} onChange={this.handleOnFeatureChange}>\r\n                        {options.map((opt, idx) => <option key={idx} value={opt}>{opt}</option>)}\r\n                    </Form.Control>\r\n                </Form>\r\n                <div id=\"scatter-plot\" ref={this.scatterPlotDivRef}></div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nconst d3 = require('d3')\r\nconst d3AreaChart = require('./d3/AreaChart')\r\n\r\nconst MAX_N_DAYS = 365\r\n\r\nexport default class AreaChart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            accumulated: false,\r\n            nDays: 30,\r\n            minDate: null,\r\n            maxDate: null\r\n        }\r\n        this.areaChartDivRef = React.createRef()\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        let minDate = null\r\n        let maxDate = null\r\n        let date = props.date\r\n\r\n        if (date.length === 2) {\r\n            minDate = date[0]\r\n            maxDate = date[1]\r\n        } else {\r\n            maxDate = date[0]\r\n        }\r\n\r\n        return {\r\n            minDate: minDate,\r\n            maxDate: maxDate\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addD3()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.addD3()\r\n    }\r\n\r\n    addD3() {\r\n        let data = []\r\n        let colorDomain = []\r\n        let colorRange = []\r\n        let nDays = this.state.nDays - 1\r\n\r\n        let selectedTracks = this.props.selectedTracks\r\n        let maxDate = new Date(this.state.maxDate)\r\n        let maxMinusNDays = new Date(this.state.maxDate)\r\n        maxMinusNDays.setDate(maxMinusNDays.getDate() - nDays)\r\n        let minDate\r\n        if (!this.state.minDate)\r\n            minDate = maxMinusNDays\r\n        else {\r\n            let min = new Date(this.state.minDate)\r\n            if (min.valueOf() > maxMinusNDays.valueOf()) {\r\n                minDate = min\r\n                nDays = (maxDate.getTime() - minDate.getTime()) / (1000 * 3600 * 24)\r\n            } else\r\n                minDate = maxMinusNDays\r\n        }\r\n\r\n        for (const key in selectedTracks) {\r\n            if (selectedTracks.hasOwnProperty(key)) {\r\n                const element = selectedTracks[key]\r\n                if (!element) continue\r\n                data.push(element.allEntries.filter(e => {\r\n                    let date = new Date(e.Date)\r\n                    return date.valueOf() <= maxDate.valueOf() && date.valueOf() >= minDate.valueOf()\r\n                }))\r\n                colorDomain.push(key)\r\n                colorRange.push(element.color)\r\n            }\r\n        }\r\n\r\n        if (this.state.accumulated) {\r\n            data = JSON.parse(JSON.stringify(data))\r\n            data = data.map(\r\n                e => e.reverse().map(\r\n                    (d, mapIdx) => {\r\n                        let dCopy = JSON.parse(JSON.stringify(d))\r\n                        for (let i = 0; i < mapIdx; i++)\r\n                            dCopy.Streams = `${+dCopy.Streams + +e[i].Streams}`\r\n                        return dCopy\r\n                    }\r\n                )\r\n            )\r\n        }\r\n\r\n        d3AreaChart('#area-chart', data, {\r\n            w: this.areaChartDivRef.current.offsetWidth,\r\n            h: this.props.height - 60,\r\n            margin: { top: 10, right: 30, bottom: 30, left: 60 },\r\n            xAttribute: 'Date',\r\n            yAttribute: 'Streams',\r\n            colorAttribute: 'Id',\r\n            dotRadius: 3,\r\n            lineWidth: 1.5,\r\n            areaOpacity: .15,\r\n            numberOfValues: nDays + 1,\r\n            color: d3.scaleOrdinal()\r\n                .domain(colorDomain)\r\n                .range(colorRange)\r\n        })\r\n    }\r\n\r\n    handleOnNDaysChange = (ev) => {\r\n        this.setState({ nDays: ev.target.value })\r\n    }\r\n\r\n    handleOnAccumulatedChange = (ev) => {\r\n        this.setState({ accumulated: ev.target.checked })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form inline style={{ marginTop: 10, float: 'right' }}>\r\n                    <Form.Check type='switch' label='accumulated' id='accumulated'\r\n                        checked={this.state.accumulated} onChange={this.handleOnAccumulatedChange} />\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Form.Control type='number' min={2} max={MAX_N_DAYS}\r\n                        value={this.state.nDays} onChange={this.handleOnNDaysChange} />\r\n                </Form>\r\n                <div id=\"area-chart\" ref={this.areaChartDivRef}></div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Button, Form, Modal } from 'react-bootstrap'\r\n\r\nconst d3ForceLayout = require('./d3/ForceLayout')\r\n\r\nconst N_MIN_FEATURES = 1\r\nconst N_MAX_FEATURES = 4\r\n\r\nconst options = [\r\n    'Acousticness',\r\n    'Danceability',\r\n    'Duration ms',\r\n    'Energy',\r\n    'Instrumentalness',\r\n    'Liveness',\r\n    'Loudness',\r\n    'Speechiness',\r\n    'Tempo',\r\n    'Valence',\r\n]\r\n\r\nexport default class ForceLayout extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showForm: false,\r\n            features: ['Energy', 'Valence', 'Danceability']\r\n        }\r\n        this.forceLayoutDivRef = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addD3()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.addD3()\r\n    }\r\n\r\n    addD3() {\r\n        d3ForceLayout('#force-layout', this.props.tracks, {\r\n            w: this.forceLayoutDivRef.current.offsetWidth,\r\n            h: this.props.height - 20,\r\n            margin: { top: 10, right: 30, bottom: 30, left: 60 },\r\n            fociAttributes: this.state.features,\r\n            fociDomains: this.state.features.map(f => [this.getFeatureMin(f), this.getFeatureMax(f)]),\r\n            dotRadius: track => {\r\n                if (this.props.selectedTracks[track.Id])\r\n                    return 3.0\r\n                return 1.5\r\n            },\r\n            onDotClick: this.props.onTrackClick,\r\n            collideForceStrength: track => {\r\n                if (this.props.selectedTracks[track.Id])\r\n                    return 3.0\r\n                return 1.5\r\n            },\r\n            color: track => {\r\n                if (this.props.selectedTracks[track.Id])\r\n                    return this.props.selectedTracks[track.Id].color\r\n                return 'white'\r\n            },\r\n            tooltipHtml: d => `Track: ${d['Track Name']}<br />Artist: ${d.Artist}<br />` +\r\n                this.state.features.reduce((acc, curr) => {\r\n                    if (acc.length !== 0) acc += '<br />'\r\n                    return acc + `${curr}: ${d[curr]}`\r\n                }, '')\r\n        })\r\n    }\r\n\r\n    getFeatureMax(feature) {\r\n        if (this.props.tracks.length === 0) return 0\r\n        let max = this.props.tracks.reduce(\r\n            (acc, t) => t[feature] > acc ? t[feature] : acc,\r\n            this.props.tracks[0][feature]\r\n        )\r\n        if (max < 1 && max > 0) return 1\r\n        if (max > -60 && max < 0) return 0\r\n        return max\r\n    }\r\n\r\n    getFeatureMin(feature) {\r\n        if (this.props.tracks.length === 0) return 0\r\n        let min = this.props.tracks.reduce(\r\n            (acc, t) => t[feature] < acc ? t[feature] : acc,\r\n            this.props.tracks[0][feature]\r\n        )\r\n        if (min < 1 && min > 0) return 0\r\n        if (min > -60 && min < 0) return -60\r\n        return min\r\n    }\r\n\r\n    handleOnClick = () => {\r\n        this.setState({ showForm: true })\r\n    }\r\n\r\n    handleOnCancel = () => {\r\n        this.setState({ showForm: false })\r\n    }\r\n\r\n    handleOnSave = (features) => {\r\n        this.setState({\r\n            showForm: false,\r\n            features: features\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button variant=\"outline-light\" onClick={this.handleOnClick}\r\n                    style={{ marginTop: 10, textAlign: 'right', float: 'right' }}\r\n                >\r\n                    &#11607;\r\n                </Button>\r\n                <div id=\"force-layout\" ref={this.forceLayoutDivRef}></div>\r\n                <FeaturesForm min={N_MIN_FEATURES} max={N_MAX_FEATURES} show={this.state.showForm}\r\n                    onCancel={this.handleOnCancel} onSave={this.handleOnSave} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nclass FeaturesForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            features: ['Energy']\r\n        }\r\n    }\r\n\r\n    handleOnChange = (ev) => {\r\n        if (this.state.features.includes(ev.target.value))\r\n            this.setState({\r\n                features: this.state.features.filter(f => f !== ev.target.value)\r\n            })\r\n        else {\r\n            let features = this.state.features\r\n            features.push(ev.target.value)\r\n            this.setState({\r\n                features: features\r\n            })\r\n        }\r\n    }\r\n\r\n    handleOnSave = () => {\r\n        let len = this.state.features.length\r\n        if (len > N_MAX_FEATURES || len < N_MIN_FEATURES) return\r\n        this.props.onSave(this.state.features)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal show={this.props.show} onHide={this.props.onCancel} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Select Feature(s)</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Select between {N_MIN_FEATURES} and {N_MAX_FEATURES} features.\r\n                    <Form>\r\n                        <Form.Control as=\"select\" multiple value={this.state.features}\r\n                            onChange={this.handleOnChange}\r\n                        >\r\n                            {options.map((f, idx) => (<option key={idx}>{f}</option>))}\r\n                        </Form.Control>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.props.onCancel}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={this.handleOnSave}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nconst d3WordCloud = require('./d3/WordCloud')\r\n\r\nconst MAX_FONT_SIZE = 40\r\nconst MIN_FONT_SIZE = 7\r\n\r\nexport default class WordCloud extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            artistsStreams: []\r\n        }\r\n        this.wordCloudDivRef = React.createRef()\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        let accStreams = props.tracks.reduce((acc, t) => {\r\n            if (!acc[t.Artist])\r\n                acc[t.Artist] = +t.Streams\r\n            else\r\n                acc[t.Artist] += +t.Streams\r\n            return acc\r\n        }, {})\r\n        let artistsStreams = []\r\n        for (const key in accStreams)\r\n            if (accStreams.hasOwnProperty(key))\r\n                artistsStreams.push({ artist: key, streams: accStreams[key] })\r\n        artistsStreams = artistsStreams.sort((a1, a2) => a2.streams - a1.streams)\r\n        return { artistsStreams: artistsStreams }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        if (nextProps.tracks === this.props.tracks\r\n            && nextProps.height === this.props.height)\r\n            return false\r\n        return true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addD3()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.addD3()\r\n    }\r\n\r\n    addD3() {\r\n        let artistsStreams = this.state.artistsStreams\r\n        let max\r\n        let min\r\n        if (artistsStreams.length === 0) {\r\n            max = 0\r\n            min = 0\r\n        } else {\r\n            max = artistsStreams[0].streams\r\n            min = artistsStreams[artistsStreams.length - 1].streams\r\n        }\r\n        let streamsDiff = max - min\r\n        let fontSizeDiff = MAX_FONT_SIZE - MIN_FONT_SIZE\r\n\r\n        d3WordCloud('#word-cloud', this.state.artistsStreams, {\r\n            w: this.wordCloudDivRef.current.offsetWidth,\r\n            h: this.props.height - 15,\r\n            margin: { top: 0, right: 0, bottom: 0, left: 0 },\r\n            textAttribute: 'artist',\r\n            valueAttribute: 'streams',\r\n            sizeScale: v => {\r\n                let dif = v - min\r\n                let percentage = dif / streamsDiff\r\n                v = fontSizeDiff * percentage + MIN_FONT_SIZE\r\n                return v\r\n            },\r\n            maxSize: MAX_FONT_SIZE,\r\n            wordsPadding: 3,\r\n            onWordClick: this.props.onWordClick\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div id=\"word-cloud\" ref={this.wordCloudDivRef}></div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nconst d3BarChart = require('./d3/BarChart')\r\nconst MAX_N_TRACKS = 15\r\n\r\nexport default class BarChart extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nTracks: 4\r\n        }\r\n        this.barChartDivRef = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addD3()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.addD3()\r\n    }\r\n\r\n    addD3() {\r\n        let data = this.getTopNTracks(this.state.nTracks)\r\n        let selectedTracks = this.props.selectedTracks\r\n\r\n        for (const key in selectedTracks) {\r\n            if (selectedTracks.hasOwnProperty(key)) {\r\n                const element = selectedTracks[key]\r\n                if (!element) continue\r\n                data.push(this.getNumberOfDays(element))\r\n            }\r\n        }\r\n\r\n        d3BarChart('#bar-chart', data, {\r\n            w: this.barChartDivRef.current.offsetWidth,\r\n            h: this.props.height - 60,\r\n            margin: { top: 10, right: 30, bottom: 30, left: 60 },\r\n            xAttribute: 'nDays',\r\n            yAttribute: 'track',\r\n            idAttribute: 'id',\r\n            color: d => {\r\n                if (selectedTracks[d.id])\r\n                    return selectedTracks[d.id].color\r\n                return 'SlateGrey'\r\n            },\r\n            tooltipHtml: d => {\r\n                let text = `Track: ${d.track}<br />Artist: ${d.artist}<br />`\r\n                text += this.props.date.length === 2 ? 'Max number' : 'Number'\r\n                text += ` of consecutive days on the charts: ${d.nDays}`\r\n                return text\r\n            },\r\n            onBarClick: d => this.props.onTrackClick(d.id)\r\n        })\r\n    }\r\n\r\n    getNumberOfDays(element) {\r\n        let dates = this.props.date\r\n            .map(d => new Date(d))\r\n\r\n        let res = {\r\n            track: element.track['Track Name'],\r\n            artist: element.track.Artist,\r\n            id: element.track.Id,\r\n            nDays: 0\r\n        }\r\n\r\n        let entries = element.allEntries.filter(e => {\r\n            let date = new Date(e.Date)\r\n            if (dates.length === 2)\r\n                return date.valueOf() <= dates[1].valueOf() && date.valueOf() >= dates[0].valueOf()\r\n            return date.valueOf() <= dates[0].valueOf()\r\n        })\r\n\r\n        let prevDate = new Date(entries[0].Date)\r\n        let counter = 1\r\n        for (let i = 1; i < entries.length; i++) {\r\n            const date = new Date(entries[i].Date)\r\n            if ((prevDate.getTime() - date.getTime()) / (1000 * 3600 * 24) === 1)\r\n                ++counter\r\n            else\r\n                res.nDays = res.nDays > counter ? res.nDays : counter\r\n            prevDate = date\r\n        }\r\n        res.nDays = res.nDays > counter ? res.nDays : counter\r\n\r\n        return res\r\n    }\r\n\r\n    getTopNTracks(n) {\r\n        let map = this.props.allTracksMap\r\n        let tracks = this.props.tracks.map(t => this.getNumberOfDays(map[t.Id]))\r\n        return tracks.sort((t1, t2) => t2.nDays - t1.nDays).slice(0, n)\r\n    }\r\n\r\n    handleOnNTracksChange = (ev) => {\r\n        this.setState({ nTracks: ev.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form inline style={{ marginTop: 10, float: 'right' }}>\r\n                    <Form.Control type='number' min={0} max={MAX_N_TRACKS}\r\n                        value={this.state.nTracks} onChange={this.handleOnNTracksChange} />\r\n                </Form>\r\n                <div id=\"bar-chart\" ref={this.barChartDivRef}></div>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport SpiderChart from './visualizations/SpiderChart'\r\nimport ScatterPlot from './visualizations/ScatterPlot'\r\nimport AreaChart from './visualizations/AreaChart'\r\nimport ForceLayout from './visualizations/ForceLayout'\r\nimport WordCloud from './visualizations/WordCloud'\r\nimport BarChart from './visualizations/BarChart'\r\n\r\nexport default class Visualizations extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            rowHeight: window.innerHeight / 3,\r\n            scatterPlotFeature: 'Energy'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.updateRowHeight)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateRowHeight)\r\n    }\r\n\r\n    updateRowHeight = () => {\r\n        this.setState({ rowHeight: window.innerHeight / 3 })\r\n    }\r\n\r\n    handleOnFeaturesChange = (feature) => {\r\n        this.setState({ scatterPlotFeature: feature })\r\n    }\r\n\r\n    render() {\r\n        let style = {\r\n            width: '50%'\r\n        }\r\n        return (\r\n            <Container fluid={true}>\r\n                <Row style={{ height: this.state.rowHeight }}>\r\n                    <Col style={style}>\r\n                        <SpiderChart tracks={this.props.tracks} selectedTracks={this.props.selectedTracks}\r\n                            height={this.state.rowHeight} onLabelClick={this.handleOnFeaturesChange}\r\n                        />\r\n                    </Col>\r\n                    <Col style={style}>\r\n                        <ScatterPlot tracks={this.props.tracks} selectedTracks={this.props.selectedTracks}\r\n                            onTrackClick={this.props.onTrackClick} height={this.state.rowHeight}\r\n                            feature={this.state.scatterPlotFeature} onFeatureChange={this.handleOnFeaturesChange}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{ height: this.state.rowHeight }}>\r\n                    <Col style={style}>\r\n                        <AreaChart selectedTracks={this.props.selectedTracks} date={this.props.date} height={this.state.rowHeight} />\r\n                    </Col>\r\n                    <Col style={style}>\r\n                        <ForceLayout tracks={this.props.tracks} selectedTracks={this.props.selectedTracks}\r\n                            height={this.state.rowHeight} onTrackClick={this.props.onTrackClick}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row style={{ height: this.state.rowHeight }}>\r\n                    <Col style={style}>\r\n                        <WordCloud tracks={this.props.tracks} height={this.state.rowHeight} onWordClick={this.props.onSearchChange} />\r\n                    </Col>\r\n                    <Col style={style}>\r\n                        <BarChart tracks={this.props.tracks} selectedTracks={this.props.selectedTracks}\r\n                            allTracksMap={this.props.allTracksMap} date={this.props.date} height={this.state.rowHeight}\r\n                            onTrackClick={this.props.onTrackClick}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nimport './css/bootstrap.min.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}